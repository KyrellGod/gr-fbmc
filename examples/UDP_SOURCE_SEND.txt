This is just a test file for transmission. We are not interested in it's content.

It has 100 lines

#!/usr/bin/env python2
# -*- coding: utf-8 -*-
##################################################
# GNU Radio Python Flow Graph
# Title: Transmitter
# Generated: Thu Apr 12 08:39:34 2018
##################################################

from gnuradio import blocks
from gnuradio import eng_notation
from gnuradio import fft
from gnuradio import gr
from gnuradio import uhd
from gnuradio.eng_option import eng_option
from gnuradio.fft import window
from gnuradio.filter import firdes
from optparse import OptionParser
import fbmc1
import time


class transmitter(gr.top_block):

    def __init__(self):
        gr.top_block.__init__(self, "Transmitter")

        ##################################################
        # Variables
        ##################################################
        self.samp_rate = samp_rate = 12500000
        self.vec = vec = 64
        self.spf = spf = 60
        self.sensor_skip = sensor_skip = samp_rate
        self.preamble = preamble = 1
        self.mode = mode = 0
        self.logical_channels = logical_channels = [52,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,43,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,42,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,33,34,35,36,37,48,49,50,51,52,53,54,55,56,57,58,42,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,33,34,35,36,37,38,39,40,41,42,43,54,55,56,57,58,43,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49]
        self.gain = gain = 30
        self.freq = freq = 737.5e6
        self.fl = fl = 4
        self.encoding = encoding = 2

        ##################################################
        # Blocks
        ##################################################
        self.uhd_usrp_source_1 = uhd.usrp_source(
        	",".join(("", "")),
        	uhd.stream_args(
        		cpu_format="fc32",
        		channels=range(1),
        	),
        )
        self.uhd_usrp_source_1.set_samp_rate(samp_rate)
        self.uhd_usrp_source_1.set_center_freq(freq, 0)
        self.uhd_usrp_source_1.set_gain(20, 0)
        self.uhd_usrp_sink_0 = uhd.usrp_sink(
        	",".join(("", "")),
        	uhd.stream_args(
        		cpu_format="fc32",
        		channels=range(1),
        	),
        )
        self.uhd_usrp_sink_0.set_samp_rate(samp_rate)
        self.uhd_usrp_sink_0.set_center_freq(freq, 0)
        self.uhd_usrp_sink_0.set_gain(gain, 0)
        self.fft_vxx_1 = fft.fft_vcc(vec, True, (), True, 1)
        self.fft_vxx_0 = fft.fft_vcc(vec, False, (), True, 1)
        self.fbmc1_fbmc_tagged_stream_to_pdu_0 = fbmc1.fbmc_tagged_stream_to_pdu(vec)
        self.fbmc1_fbmc_sample_collector_0 = fbmc1.fbmc_sample_collector(mode, samp_rate/2, 2, sensor_skip)
        self.fbmc1_fbmc_ppn_0 = fbmc1.fbmc_ppn(vec, fl, 0.05)
        self.fbmc1_fbmc_phy_encoder_0 = fbmc1.fbmc_phy_encoder()
        self.fbmc1_fbmc_payload_generator_0 = fbmc1.fbmc_payload_generator(mode, spf, (logical_channels), encoding, 20000, sensor_skip)
        self.fbmc1_fbmc_p2s_1 = fbmc1.fbmc_p2s(vec, 1)
        self.fbmc1_fbmc_p2s_0 = fbmc1.fbmc_p2s(vec, 0)
        self.fbmc1_fbmc_oqam_0 = fbmc1.fbmc_oqam(vec)
        self.fbmc1_fbmc_mac_encoder_0 = fbmc1.fbmc_mac_encoder()
        self.fbmc1_fbmc_log_chann_state_0 = fbmc1.fbmc_log_chann_state(vec, 1, 50, (logical_channels))
        self.fbmc1_fbmc_carrier_allocator_0 = fbmc1.fbmc_carrier_allocator(vec, fl, preamble, 100)
        self.fbmc1_fbmc_add_0 = fbmc1.fbmc_add(vec)
        self.blocks_vector_to_stream_0 = blocks.vector_to_stream(gr.sizeof_gr_complex*1, vec)
        self.blocks_stream_to_vector_0 = blocks.stream_to_vector(gr.sizeof_gr_complex*1, vec)
        self.blocks_socket_pdu_0 = blocks.socket_pdu("UDP_SERVER", '127.0.0.1', '8888', 1472, False)

        ##################################################
        # Connections
        ##################################################
        self.msg_connect((self.blocks_socket_pdu_0, 'pdus'), (self.fbmc1_fbmc_payload_generator_0, 'app in'))
        self.msg_connect((self.fbmc1_fbmc_log_chann_state_0, 'channel control'), (self.fbmc1_fbmc_payload_generator_0, 'ch state in'))
        self.msg_connect((self.fbmc1_fbmc_mac_encoder_0, 'mac out'), (self.fbmc1_fbmc_phy_encoder_0, 'phy in'))
        self.msg_connect((self.fbmc1_fbmc_payload_generator_0, 'app out'), (self.fbmc1_fbmc_mac_encoder_0, 'mac in'))
        self.msg_connect((self.fbmc1_fbmc_phy_encoder_0, 'phy out'), (self.fbmc1_fbmc_carrier_allocator_0, 'caa in'))
        self.msg_connect((self.fbmc1_fbmc_tagged_stream_to_pdu_0, 'frame out'), (self.fbmc1_fbmc_sample_collector_0, 'scl in'))
        self.connect((self.blocks_stream_to_vector_0, 0), (self.fft_vxx_1, 0))

asdasdsa
asdasd
ass
